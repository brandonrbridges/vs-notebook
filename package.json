{
	"name": "vs-notebook",
	"displayName": "VS Notebook",
	"description": "Add notes to your code and files in VS Code. Create, view, and manage notes directly within the editor.",
	"icon": "./src/assets/icon.png",
	"version": "0.0.10",
	"repository": {
		"type": "git",
		"url": "https://github.com/brandonrbridges/vs-notebook.git"
	},
	"author": {
		"name": "Brandon Bridges",
		"email": "brandonrbridges@outlook.com"
	},
	"publisher": "brandonbridges",
	"license": "MIT",
	"engines": {
		"vscode": "^1.102.0"
	},
	"categories": [
		"Other"
	],
	"activationEvents": [],
	"main": "./dist/extension.js",
	"contributes": {
		"configuration": {
			"title": "VS Notebook",
			"category": "VS Notebook",
			"properties": {
				"vs-notebook.groupBy": {
					"title": "Group Notes",
					"type": "string",
					"enum": [
						"none",
						"file",
						"tag"
					],
					"enumDescriptions": [
						"No grouping - show all notes in a flat list",
						"Group notes by file - show notes grouped by the file they belong to",
						"Group notes by tag - show notes grouped by their tags"
					],
					"default": "file",
					"description": "How to group notes in the VS Notebook view?"
				}
			}
		},
		"menus": {
			"view/title": [
				{
					"command": "vs-notebook.openSettings",
					"when": "view == vs-notebook-notes",
					"group": "navigation",
					"icon": "$(gear)"
				},
				{
					"command": "vs-notebook.createGlobalNote",
					"when": "view == vs-notebook-notes-global",
					"group": "navigation",
					"icon": "$(note)"
				}
			],
			"view/item/context": [
				{
					"command": "vs-notebook.renameNote",
					"when": "view == vs-notebook-notes && viewItem == noteItem",
					"group": "inline"
				},
				{
					"command": "vs-notebook.deleteNote",
					"when": "view == vs-notebook-notes && viewItem == noteItem",
					"group": "inline"
				}
			]
		},
		"commands": [
			{
				"command": "vs-notebook.openSettings",
				"title": "Open VS Notebook Settings",
				"icon": "$(gear)"
			},
			{
				"command": "vs-notebook.createNote",
				"title": "VS Notebook: Create Note",
				"icon": "$(note)"
			},
			{
				"command": "vs-notebook.createGlobalNote",
				"title": "VS Notebook: Create Global Note",
				"icon": "$(note)"
			},
			{
				"command": "vs-notebook.deleteNote",
				"title": "VS Notebook: Delete Note",
				"icon": "$(trash)"
			},
			{
				"command": "vs-notebook.renameNote",
				"title": "VS Notebook: Rename Note",
				"icon": "$(pencil)"
			},
			{
				"command": "vs-notebook.openNotesForLine",
				"title": "VS Notebook: Open Notes for Line"
			},
			{
				"command": "vs-notebook.openNotesForRange",
				"title": "VS Notebook: Open Notes for Range"
			}
		],
		"viewsContainers": {
			"activitybar": [
				{
					"id": "vs-notebook-notes",
					"title": "VS Notebook",
					"icon": "./src/assets/sidebar-icon.svg"
				}
			]
		},
		"views": {
			"vs-notebook-notes": [
				{
					"id": "vs-notebook-notes",
					"name": "My Notes",
					"icon": "./src/assets/icon.png",
					"canSelectMany": false,
					"canSearch": true
				},
				{
					"id": "vs-notebook-notes-global",
					"name": "Global Notes",
					"icon": "./src/assets/icon.png",
					"canSelectMany": false,
					"canSearch": true
				}
			]
		},
		"viewsWelcome": [
			{
				"view": "vs-notebook-notes",
				"contents": "Welcome to VS Notebook!\nTo get started, click on a line of code (or select a block of code) and use the Command Palette and type\n\"VS Notebook: Create Note\"\nTo create a note for that code.\n\nYou can also create notes for files, folders, or globally accessible notes."
			},
			{
				"view": "vs-notebook-notes-global",
				"contents": "Use the Command Palette and type:\n\"VS Notebook: Create Global Note\"\nThis will create a note that is accessible from anywhere in your workspace.\n\nGlobal notes are useful for storing information that is not tied to a specific file or line of code (such as snippets or documentation)."
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "npm run package",
		"vscode:publish": "vsce publish",
		"package": "npm run check-types && npm run lint && node esbuild.js --production",
		"compile": "npm run check-types && npm run lint && node esbuild.js",
		"watch": "npm-run-all -p watch:*",
		"watch:esbuild": "node esbuild.js --watch",
		"watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
		"compile-tests": "tsc -p . --outDir out",
		"watch-tests": "tsc -p . -w --outDir out",
		"pretest": "npm run compile-tests && npm run compile && npm run lint",
		"check-types": "tsc --noEmit",
		"lint": "eslint src",
		"test": "vscode-test"
	},
	"devDependencies": {
		"@types/mocha": "^10.0.10",
		"@types/node": "20.x",
		"@types/vscode": "^1.102.0",
		"@typescript-eslint/eslint-plugin": "^8.31.1",
		"@typescript-eslint/parser": "^8.31.1",
		"@vscode/test-cli": "^0.0.11",
		"@vscode/test-electron": "^2.5.2",
		"esbuild": "^0.25.3",
		"eslint": "^9.25.1",
		"npm-run-all": "^4.1.5",
		"typescript": "^5.8.3"
	},
	"dependencies": {
		"@vscode/codicons": "^0.0.38",
		"chokidar": "^4.0.1"
	}
}
